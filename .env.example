# .env file generated from Pydantic Settings

# --- Project Configuration ---
PROJECT_NAME="多模型支持的智能聊天应用"
DESCRIPTION="基于FastAPI的AI聊天应用API"
VERSION="0.1.0"

API_V1_STR="/api/v1"
ENVIRONMENT="dev" # Set to 'prod', 'staging', etc. in different environments

# --- CORS ---
# Comma-separated list of allowed origins
CORS_ORIGINS=["http://localhost:3000", "http://localhost:8000"]

# --- Security ---
# !!! IMPORTANT: Replace with your own securely generated secret key !!!
# You can generate one using: python -c 'import secrets; print(secrets.token_urlsafe(32))'
SECRET_KEY="<replace_with_your_own_strong_random_secret_key>"
# 7 days (60 * 24 * 7)
ACCESS_TOKEN_EXPIRE_MINUTES=10080 

# --- Database Configuration (PostgreSQL) ---
POSTGRES_SERVER="localhost"
POSTGRES_USER="postgres"
# Consider using a stronger password
POSTGRES_PASSWORD="postgres"
POSTGRES_DB="chatapp"
POSTGRES_PORT=5432
# Alternatively, you can set the full DATABASE_URL (takes precedence if set)
# DATABASE_URL="postgresql+asyncpg://user:password@host:port/db"
POOL_SIZE=5
MAX_OVERFLOW=10

# --- Redis Configuration ---
REDIS_HOST="localhost"
REDIS_PORT="6379"
# REDIS_PASSWORD=your_redis_password # Uncomment and set if your Redis requires a password
REDIS_DB=0

# --- Vector Database Configuration ---
VECTOR_DB_TYPE="chroma" # Options: "chroma", "pinecone"
# Chroma specific settings (used if VECTOR_DB_TYPE="chroma")
CHROMA_DB_DIR="./chroma_db"
# Pinecone specific settings (used if VECTOR_DB_TYPE="pinecone")
# PINECONE_API_KEY=your_pinecone_api_key         # Uncomment and set if using Pinecone
# PINECONE_ENVIRONMENT=your_pinecone_environment # Uncomment and set if using Pinecone
# PINECONE_INDEX_NAME=your_pinecone_index_name   # Uncomment and set if using Pinecone

# --- LLM API Keys ---
# Provide API keys for the models you intend to use
# OPENAI_API_KEY=your_openai_api_key
# ANTHROPIC_API_KEY=your_anthropic_api_key
# DEEPSEEK_API_KEY=your_deepseek_api_key

# --- File Upload Configuration ---
UPLOAD_DIR="./uploads"
# 20MB (20 * 1024 * 1024)
MAX_UPLOAD_SIZE=20971520 

# Qwen/DashScope 配置
QWEN_API_KEY=
# 阿里云灵积API密钥（与QWEN_API_KEY相同）
DASHSCOPE_API_KEY=
QWEN_BASE_URL="https://dashscope.aliyuncs.com/api/v1"

# 嵌入模型配置
EMBEDDING_PROVIDER="google_genai"
EMBEDDING_MODEL="text-embedding-3-small"
QWEN_EMBEDDING_MODEL="text-embedding-v1"

# Sentry设置
SENTRY_DSN=

# Celery设置
CELERY_BROKER_URL= "amqp://guest:guest@localhost:5672//"
CELERY_RESULT_BACKEND= "redis://localhost:6379/0"
